 # 配置根log，第一个参数为你想要输出的日志的等级，后面的是自定义的输出源（appender）
log4j.rootLogger = debug,console,I,E

#输出源console输出到控制台
log4j.appender.console = org.apache.log4j.ConsoleAppender 
log4j.appender.console.Target = System.out

 #日志格式输出方式，选着这种方式需要自定义格式
log4j.appender.console.layout = org.apache.log4j.PatternLayout 
#自定义格式
log4j.appender.console.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n

# I 是第二个输出源
log4j.appender.I = org.apache.log4j.DailyRollingFileAppender
log4j.appender.I.File = ${webapp.root}/WEB-INF/logs/log.log
log4j.appender.I.Append = true

# 这里可以配置本输出源打印的级别  将info 输出到日志文件
log4j.appender.I.Threshold = INFO 
log4j.appender.I.layout = org.apache.log4j.PatternLayout
log4j.appender.I.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


### 配置错误到error.log  
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = ${webapp.root}/WEB-INF/logs/error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n