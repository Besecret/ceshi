<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.root</param-value>
	</context-param>

	<!-- log4j 日志存放 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/conf/log4j.properties</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/conf/applicationContext.xml</param-value>
	</context-param>

	<!-- 
		使用Log4jConfigListener可以 把log文件定在 /WEB-INF/logs/ 
		而不需要写绝对路径。 系统把web目录的路径压入一个叫webapp.root的系统变量。 
	-->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- 注 applicationContext.xml 默认在web-inf 下 -->
	<!-- ContextLoaderListener 监听器在web启动时载入contextConfigLocation 的配置文件。 并把bean创建。 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 配置编码转码转换器 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!-- forceEncoding设为true也会影响到response中的字符编码 一般并不需要 -->
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>load-on-startup</param-name>
			<param-value>0</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- 注 struts 默认配置文件在 classes 下 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>config</param-name>
			<!--从新指定路径时需要，把 struts-default.xml 和 struts-plugin.xml 初始化参数添加进来 -->
			<param-value>struts-default.xml,struts-plugin.xml,../conf/struts.xml</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<!-- cxf 拦截器 -->
	<servlet>  
        <servlet-name>CXFServlet</servlet-name>  
        <servlet-class>  
               org.apache.cxf.transport.servlet.CXFServlet  
        </servlet-class>  
        <load-on-startup>1</load-on-startup>  
    </servlet>

	<!-- spring 拦截 -->
	<servlet>
    	<servlet-name>dispatcherServlet</servlet-name>
   		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    	<init-param>  			
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/conf/dispatcherServlet-servlet.xml</param-value>   	
    	</init-param>
    	
    	<load-on-startup>1</load-on-startup>
   </servlet>

	
	
	<!-- 
	 使用 url-pattern设置为了“/”,这样便要求SpringMVC处理所有的浏览器请求
	当 html,js,这样的文件通过浏览器访问时，便无法加载这样的静态资源，jsp 页面
	可以被访问是因为存在.jsp 扩展名优先级较高。
	 -->
	<servlet-mapping>  
         <servlet-name>CXFServlet</servlet-name>  
         <url-pattern>/webservice/*</url-pattern>  
    </servlet-mapping> 
    
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>/views/index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
